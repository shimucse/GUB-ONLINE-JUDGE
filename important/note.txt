#backend
    --install 
        npm init
        npm install --save express
        npm install -g nodemon
        npm install --save axios
        npm install --save cors
        "start": "nodemon index.js"(npm start)
         npm install --save uuid//help to generate new id
          g++ filename.cpp
          ./a .out
          shell command inside nodejs


  const language = req.body.language;
  const code = req.body.code;   
  const {language ,code} = req.body;
  const {language='cpp',code} = req.body;

  return res.json(req.body)

if(code === undefined){
     return res.status(400).json({success:false, error:"Empty code body!"});
   }
//need to generate a c++ file with content from the request 
// we need to run the file and send the response
//Message queue {redis}(install redis)
start server:redis-sever
 redis-cli
127.0.0.1:6379> ping
PONG

npm install  bull --save

npm i moment
install codemirror 3.2.1

install MDEditor for text editor

for redirect to another page :
npm i react-router-dom // for using different page
import { BrowserRouter, Routes, Route,Link,Router,Outlet } from "react-router-dom";
import { useNavigate } from "react-router-dom"; for go another page
//for pass value to other page 
setProblemId(id);
      navigate("/ProblemDisplay",{state:{id:id}});

import { useLocation} from "react-router-dom";
const location = useLocation();
  console.log("id:  "+location.state.id);

get data with id :
   client: const data =  Axios.get(`http://localhost:5000/problemAdd/fetch/${id}`);  
 Server: router.get('/fetch/:id',function(req,res){

for print response
            console.log("response data",response.data);//not +

.join() for only array

install jsonwebtoken on backend
allow us to sign 
npm add jsonwebtoken


window.confirm and alert are same
JSON.parse:When receiving data from a web server, the data is always a string.

Parse the data with JSON.parse(), and the data becomes a JavaScript object.

In frontend/client 
npm add jsonwebtoken its shows errror while import 

thats why 
npm i jwt-decode 
import jwtDecode from 'jwt-decode'
const decoded = jwtDecode(token)
console.log(decoded)
//it worked

